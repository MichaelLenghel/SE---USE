model Employee

-- classes

class Person
	attributes
		name : String
		age : Integer
		income : Real
	operations
		calcIncome(getSalary : Real) : Real
		begin
			self.income := 0;
			self.income := self.income + getSalary;
			result := self.income;
		end
end

class Contract
	attributes
		title : String
		salary : Real
	operations
		raiseSalary(rate : Real) : Real
end

class Company
	attributes
		name : String
		location : String
	operations
		hire (p : Person, c : Contract)
		fire (p : Person, c : Contract)
end

-- associations

association WorksOn between
	Person[1] role person
	Contract[*] role jobs
end

association IsAt between
	Company[1] role company
	Contract[1..*] role contracts
end

-- constraints

constraints

context Contract::raiseSalary (rate : Real) : Real
	-- PART 4
	pre checkAge: person.age >= 21
	post raiseSalaryPost:
		salary = salary@pre * (1.0 + rate)
	post resultPost:
		result = salary

context Company::hire(p : Person, c : Contract)
	pre hirePre: p.isDefined()
	pre hirePre2: contracts->excludes(c)
	post hirePre3: contracts->includes(c)
	-- PART 2
	post minSal: p.income >= 20000


context Company::fire(p : Person, c : Contract)
	pre firePre: contracts->excludes(p)
	post firePost: contracts->includes(p)



