model Employee

-- classes

class Person
	attributes
		name : String
		age : Integer
		salary : Real
	operations
		raiseSalary (rate : Real) : Real
		--begin
			--self.salary := self.salary + self.salary * rate;
		--end
end

class Company
	attributes
		name : String
		location : String
	operations
		hire (p : Person)
		--begin
			--insert (p, self) into WorksFor;
		--end
		fire (p : Person)
		--begin
			--delete (p, self) from WorksFor;
		--end
end

-- associations

association WorksFor between
	Person[*] role employee
	Company[0..1] role employer
end

-- constraints

constraints

context Person::raiseSalary (rate : Real) : Real
	pre minAge: age >= 21
	post raiseSalaryPost:
		salary = salary@pre * (1.0 + rate)
	post resultPost:
		result = salary

context Company::hire (p : Person)
	pre hirePre1: p.isDefined()
	pre hirePre2: employee->excludes(p)
	post hirePost: employee->includes(p)

context Company::fire (p : Person)
	pre firePre: employee->includes(p)
	post firePost: employee->excludes(p)