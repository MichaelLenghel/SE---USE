USE version 5.0.0, Copyright (C) 1999-2017 University of Bremen
use> open demo.soil
demo.soil> -- Script generated by USE 5.0.0
demo.soil> 
demo.soil> !new Department('cs')
demo.soil> !cs.name := 'Computer Science'
demo.soil> !cs.location := 'Kevin Street'
demo.soil> !cs.budget := 10000
demo.soil> !new Employee('john')
demo.soil> !john.name := 'John'
demo.soil> !john.salary := 4000
demo.soil> !new Employee('frank')
demo.soil> !frank.name := 'Frank'
demo.soil> !frank.salary := 4500
demo.soil> !insert (john,cs) into WorksIn
demo.soil> !insert (frank,cs) into WorksIn
demo.soil> !new Project('research')
demo.soil> !research.name := 'Research'
demo.soil> !research.budget := 12000
demo.soil> !new Project('teaching')
demo.soil> !teaching.name := 'Validating UML'
demo.soil> !teaching.budget := 3000
demo.soil> !insert (cs,research) into Controls
demo.soil> !insert (cs,teaching) into Controls
demo.soil> !insert (frank,research) into WorksOn
demo.soil> !insert (frank,teaching) into WorksOn
demo.soil> !insert (john,research) into WorksOn
demo.soil> 
use> -> true : Boolean
use> [GUI] new Project('gaming')
!insert (cs,gaming) into Controls
use> ?Department.allInstances.forAll(d | d.employee->size() >= d.project->size())
-> false : Boolean
use> gen load demo.invs
The command `gen load' is deprecated and will be removed in the next USE release. Please replace it with the command `constraints -load'.
Added invariants:
Department::MoreEmployeesThanProjects
Employee::MoreProjectsHigherSalary
Project::BudgetWithinDepartmentBudget
Project::EmployeesInControllingDepartment
use> check
checking structure...
checked structure in 16ms.
checking invariants...
checking invariant (1) `Department::MoreEmployeesThanProjects': FAILED.
  -> false : Boolean
checking invariant (2) `Employee::MoreProjectsHigherSalary': OK.
checking invariant (3) `Project::BudgetWithinDepartmentBudget': FAILED.
  -> false : Boolean
checking invariant (4) `Project::EmployeesInControllingDepartment': OK.
checked 4 invariants in 0.015s, 2 failures.
use> check -a
checking structure...
checked structure in 0ms.
checking invariants...
checking invariant (1) `Department::MoreEmployeesThanProjects': FAILED.
  -> false : Boolean
checking invariant (2) `Employee::MoreProjectsHigherSalary': OK.
checking invariant (3) `Project::BudgetWithinDepartmentBudget': FAILED.
  -> false : Boolean
checking invariant (4) `Project::EmployeesInControllingDepartment': OK.
checked 4 invariants in 0.016s, 2 failures.
use> gen load demo.invs
The command `gen load' is deprecated and will be removed in the next USE release. Please replace it with the command `constraints -load'.
demo.invs:18:47: Undefined operation `Employee.size' in shorthand notation for collect. However, there is an operation `Set(Employee)->size'. Maybe you wanted to use `->' instead of `.'?
Duplicate definition of invariant `MoreProjectsHigherSalary' in class `Employee'.
Duplicate definition of invariant `BudgetWithinDepartmentBudget' in class `Project'.
Duplicate definition of invariant `EmployeesInControllingDepartment' in class `Project'.
Added invariants:
Department::MoreStaffThanProjects
Department::MoreStaffThanProjects2
Department::MoreStaffThanProjects3
Department::MoreStaffThanProjects4
use> check -a
checking structure...
checked structure in 15ms.
checking invariants...
checking invariant (1) `Department::MoreEmployeesThanProjects': FAILED.
  -> false : Boolean
checking invariant (2) `Department::MoreStaffThanProjects': FAILED.
  -> false : Boolean
checking invariant (3) `Department::MoreStaffThanProjects2': FAILED.
  -> false : Boolean
checking invariant (4) `Department::MoreStaffThanProjects3': FAILED.
  -> false : Boolean
checking invariant (5) `Department::MoreStaffThanProjects4': FAILED.
  -> false : Boolean
checking invariant (6) `Employee::MoreProjectsHigherSalary': OK.
checking invariant (7) `Project::BudgetWithinDepartmentBudget': FAILED.
  -> false : Boolean
checking invariant (8) `Project::EmployeesInControllingDepartment': OK.
checked 8 invariants in 0.032s, 6 failures.
use> 